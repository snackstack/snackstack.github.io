"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[985],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>u});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),p=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=p(t),u=i,g=d["".concat(c,".").concat(u)]||d[u]||l[u]||o;return t?a.createElement(g,r(r({ref:n},m),{},{components:t})):a.createElement(g,r({ref:n},m))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var p=2;p<o;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3286:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=t(7462),i=(t(7294),t(3905));const o={sidebar_position:1,title:"Managing notifications"},r=void 0,s={unversionedId:"guides/managing-notifications",id:"guides/managing-notifications",title:"Managing notifications",description:"Everything regarding notifications is managed through the SnackManager.",source:"@site/docs/guides/managing-notifications.md",sourceDirName:"guides",slug:"/guides/managing-notifications",permalink:"/docs/guides/managing-notifications",draft:!1,editUrl:"https://github.com/snackstack/docs/tree/main/docs/guides/managing-notifications.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Managing notifications"},sidebar:"tutorialSidebar",previous:{title:"Get started",permalink:"/docs/"},next:{title:"Displaying notifications",permalink:"/docs/guides/displaying-notifications"}},c={},p=[{value:"Enqueuing notifications",id:"enqueuing-notifications",level:2},{value:"Closing notifications",id:"closing-notifications",level:2},{value:"Removing notifications",id:"removing-notifications",level:2},{value:"Updating notifications",id:"updating-notifications",level:2}],m={toc:p};function l(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Everything regarding notifications is managed through the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/types/SnackManager"},"SnackManager"),"."),(0,i.kt)("p",null,"You can access this manager in your React components using the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/hooks/useSnackManager"},"useSnackManager")," hook. Outside of React components you can use the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/types/SnackManager"},"SnackManager")," instance you passed to the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/components/SnackProvider"},"SnackProvider")," directly."),(0,i.kt)("h2",{id:"enqueuing-notifications"},"Enqueuing notifications"),(0,i.kt)("p",null,"You can enqueue new notifications using the ",(0,i.kt)("inlineCode",{parentName:"p"},"enqueue")," method of the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/types/SnackManager"},"SnackManager"),". The method accepts either a simple message string as argument or an object of type ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/types/NewSnack"},"NewSnack")," that allows you to specify more options."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useSnackManager } from "@snackstack/core";\n\nfunction App() {\n  const manager = useSnackManager();\n\n  manager.enqueue("Simple notification");\n\n  manager.enqueue({\n    id: 1,\n    message: <div>Some complex message</div>,\n    variant: "error",\n    persist: true,\n    meta: {\n      custom: "value",\n    },\n    action: (snack) => (\n      <button onClick={() => alert(snack.meta["custom"])}>Click me</button>\n    ),\n  });\n\n  // Omitted code for brevity\n}\n')),(0,i.kt)("p",null,"Checkout the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/types/SnackManager"},"API reference of SnackManager")," to learn more about the possible options."),(0,i.kt)("h2",{id:"closing-notifications"},"Closing notifications"),(0,i.kt)("p",null,"You can close notifications using the ",(0,i.kt)("inlineCode",{parentName:"p"},"close")," method of the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/types/SnackManager"},"SnackManager"),"."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"All this does is set the ",(0,i.kt)("inlineCode",{parentName:"p"},"status")," property on the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/types/Snack"},"Snack")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"closing"),". The effect of this is up to the implementation of the display mechanism. Most commonly it would initiate a closing transition."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useSnackManager } from "@snackstack/core";\n\nfunction App() {\n  const manager = useSnackManager();\n\n  const snackId = 1;\n\n  manager.close(snackId);\n\n  // Omitted code for brevity\n}\n')),(0,i.kt)("h2",{id:"removing-notifications"},"Removing notifications"),(0,i.kt)("p",null,"You can remove notifications using the ",(0,i.kt)("inlineCode",{parentName:"p"},"remove")," method of the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/types/SnackManager"},"SnackManager"),"."),(0,i.kt)("p",null,"Normally you would do this after the closing transition, initiated by ",(0,i.kt)("a",{parentName:"p",href:"#closing-notifications"},"closing the notification"),", has finished."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useSnackManager } from "@snackstack/core";\n\nfunction App() {\n  const manager = useSnackManager();\n\n  const snackId = 1;\n\n  manager.remove(snackId);\n\n  // Omitted code for brevity\n}\n')),(0,i.kt)("h2",{id:"updating-notifications"},"Updating notifications"),(0,i.kt)("p",null,"You can update notifications using the ",(0,i.kt)("inlineCode",{parentName:"p"},"update")," method of the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/types/SnackManager"},"SnackManager"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useSnackManager } from "@snackstack/core";\n\nfunction App() {\n  const manager = useSnackManager();\n\n  const snackId = 1;\n\n  manager.update(snackId, { persist: true });\n\n  // Omitted code for brevity\n}\n')),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If your message should be reactive, you wouldn't use ",(0,i.kt)("inlineCode",{parentName:"p"},"update"),", rather you would render a React component as the message:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"manager.enqueue({\n  message: <ProgressComponent />,\n});\n")))))}l.isMDXComponent=!0}}]);